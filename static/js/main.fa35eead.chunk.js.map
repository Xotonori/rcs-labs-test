{"version":3,"sources":["api/api.ts","redux/reducer.ts","redux/store.ts","components/TreeDataMenu/TreeDataMenu.tsx","components/Preloader/Preloader.tsx","App.tsx","index.tsx","components/Preloader/Preloader.module.scss","components/TreeDataMenu/TreeDataMenu.module.scss"],"names":["instance","axios","create","baseURL","api","get","then","res","data","SET_TREE_DATA","initialState","treeData","isFetching","actions","type","rootReducer","combineReducers","Reducer","state","action","store","createStore","applyMiddleware","thunk","TreeDataMenu","memo","useSelector","onClickMenuItemHandler","e","document","querySelectorAll","forEach","item","classList","remove","classes","activeListItem","currentTarget","contains","MenuItem","add","onClickSubMenuHandler","arrow","getElementsByClassName","arrowOpen","arrowClose","parentNode","querySelector","toggle","hideMenuItem","className","Menu","length","buildTreeData","treeItem","paddingLeft","map","index","children","key","id","wrapSubMenu","SubMenu","parent_id","MainSubMenu","style","onClick","title","UnOrderedlist","Preloader","spitWrap","Spin","App","dispatch","useDispatch","useEffect","a","treeDataArray","Object","values","result","parent","filter","child","sort","b","srt","mainParent","console","log","message","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fa35eead.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {TreeDataItemType} from \"../utils/Types/treeDataTypes\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://rcslabs.ru/locations.json'\r\n});\r\n\r\nexport const api = {\r\n    getTreeData: () => (\r\n        instance.get<ResponseType>(``)\r\n            .then(res => res.data)\r\n    )\r\n};\r\n\r\n//Response Types\r\ntype ResponseType = {\r\n    [key: number]: TreeDataItemType\r\n};\r\n\r\n\r\n\r\n\r\n","import {ThunkAction} from \"redux-thunk\"\r\nimport {AppStateType, InferActionTypes} from \"./store\";\r\nimport {api} from \"../api/api\";\r\nimport {TreeDataType} from \"../utils/Types/treeDataTypes\";\r\n\r\nconst SET_TREE_DATA = './recs-labs-test/SET_TREE_DATA'\r\nconst IS_FETCHING_SUCCESS = './recs-labs-test/IS_FETCHING_SUCCESS'\r\n\r\nlet initialState = {\r\n    treeData: [] as TreeDataType,\r\n    isFetching: false\r\n}\r\n\r\n//Reducers\r\nexport const Reducer = (state: InitialStateType = initialState, action: ActionTypes) => {\r\n    switch (action.type) {\r\n        case SET_TREE_DATA: {\r\n            return {\r\n                ...state,\r\n                treeData: [...action.treeData]\r\n            }\r\n        }\r\n        case IS_FETCHING_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Actions\r\nconst actions = {\r\n    setTreeDataSuccess: (treeData: TreeDataType) => ({type: SET_TREE_DATA, treeData} as const),\r\n    isFetchingSuccess: (isFetching: boolean) => ({type: IS_FETCHING_SUCCESS, isFetching} as const),\r\n}\r\n\r\n//Thunks\r\nexport const getTreeDataThunk = (): ThunkType => async (dispatch) => {\r\n    await dispatch(actions.isFetchingSuccess(true));\r\n    try {\r\n        const treeData = await api.getTreeData();\r\n        const treeDataArray = Object.values(treeData);\r\n\r\n        const result = treeDataArray.map((parent) => {\r\n            parent.children = treeDataArray.filter((child) => {\r\n                //Заполняем дочерними элементами массив children\r\n                return child.parent_id === parent.id;\r\n            }).sort((a, b) => {\r\n                //Сортируем дочерние элементы\r\n                return (a.srt !== b.srt) ? (a.srt > b.srt) ? 1 : -1 : 0;\r\n            })\r\n            return parent;\r\n        })\r\n            .filter((mainParent) => {\r\n                //Возвращаем только главные элементы\r\n                return mainParent.parent_id === null;\r\n            });\r\n\r\n        console.log(result)\r\n        await dispatch(actions.setTreeDataSuccess(result));\r\n    } catch (e) {\r\n        console.log(e.message);\r\n    }\r\n    await dispatch(actions.isFetchingSuccess(false));\r\n}\r\n\r\n//Types\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, {}, ActionTypes>\r\ntype InitialStateType = typeof initialState\r\ntype ActionTypes = InferActionTypes<typeof actions>","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {Reducer} from \"./reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    Reducer\r\n});\r\n\r\nexport let store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\n//Types\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport type InferActionTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never","import React, {FC, memo} from 'react'\r\nimport classes from \"./TreeDataMenu.module.scss\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {TreeDataType} from \"../../utils/Types/treeDataTypes\";\r\nimport {UpOutlined} from \"@ant-design/icons/lib\";\r\n\r\nexport const TreeDataMenu: FC = memo(() => {\r\n\r\n    const {Reducer: {treeData}} = useSelector((state: AppStateType) => state);\r\n\r\n    const onClickMenuItemHandler = (e: React.MouseEvent<HTMLLIElement>) => {\r\n        document.querySelectorAll(`li`).forEach(item => item.classList.remove(classes.activeListItem));\r\n        e.currentTarget.classList.contains(classes.MenuItem) && e.currentTarget.classList.add(classes.activeListItem);\r\n    }\r\n\r\n    const onClickSubMenuHandler = (e: React.MouseEvent<HTMLDivElement, MouseEvent> | any) => {\r\n        //Arrows\r\n        const arrow = e.currentTarget.getElementsByClassName('anticon')[0];\r\n\r\n        if(arrow.classList.contains(classes.arrowOpen)) {\r\n            arrow.classList.remove(classes.arrowOpen);\r\n            arrow.classList.add(classes.arrowClose);\r\n        } else {\r\n            arrow.classList.remove(classes.arrowClose);\r\n            arrow.classList.add(classes.arrowOpen);\r\n        }\r\n\r\n        //hideUl\r\n        e.currentTarget.parentNode.querySelector('ul').classList.toggle(classes.hideMenuItem);\r\n\r\n    }\r\n\r\n    const buildTreeData = (treeItem: TreeDataType, paddingLeft: number) => (\r\n        //Формируем html дерево\r\n        treeItem.map((item, index) => (\r\n            item.children?.length !== 0 ?\r\n                <li key={item.id} className={classes.wrapSubMenu}>\r\n                    <div className={`${classes.SubMenu} ${item.parent_id === null && classes.MainSubMenu}`}\r\n                         style={{paddingLeft: `${paddingLeft}px`}}\r\n                         onClick={onClickSubMenuHandler}\r\n                    >\r\n                        <span>{item.title}</span>\r\n                        <UpOutlined/>\r\n                    </div>\r\n                    <ul className={`${classes.UnOrderedlist} ${classes.hideMenuItem}`}>\r\n                        {buildTreeData(item.children as TreeDataType, paddingLeft + 30)}\r\n                    </ul>\r\n                </li>\r\n                :\r\n                <li key={`${item.id}${index}`}\r\n                    className={classes.MenuItem}\r\n                    style={{paddingLeft: `${paddingLeft}px`}}\r\n                    onClick={onClickMenuItemHandler}>\r\n                    {item.title}\r\n                </li>\r\n        )));\r\n\r\n    return (\r\n        <div className={classes.TreeDataMenu}>\r\n            <ul className={`${classes.Menu}`}>\r\n                {treeData.length !== 0 && buildTreeData(treeData, 20)}\r\n            </ul>\r\n        </div>\r\n    )\r\n});","import React from \"react\";\r\nimport {Spin} from \"antd\";\r\nimport classes from \"./Preloader.module.scss\"\r\n\r\nexport function Preloader() {\r\n    return (\r\n        <div className={classes.spitWrap}>\r\n            <Spin className={classes.Spin}/>\r\n        </div>\r\n    )\r\n}","import React, {FC, memo, useEffect} from 'react';\nimport './App.scss';\nimport {TreeDataMenu} from \"./components/TreeDataMenu/TreeDataMenu\";\nimport {Preloader} from \"./components/Preloader/Preloader\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppStateType} from \"./redux/store\";\nimport {getTreeDataThunk} from \"./redux/reducer\";\n\nexport const App: FC = memo(() => {\n\n    const dispatch = useDispatch();\n    const isFetching = useSelector((state: AppStateType) => state.Reducer.isFetching);\n\n    useEffect(() => {\n        dispatch(getTreeDataThunk());\n    }, []);\n\n    return (\n        <div className=\"App\">\n            {isFetching ? <Preloader/> : <TreeDataMenu/>}\n        </div>\n    )\n})\n\n","import React from \"react\";\nimport {store} from \"./redux/store\";\nimport {App} from \"./App\";\nimport {Provider} from \"react-redux\";\nimport ReactDOM from \"react-dom\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spitWrap\":\"Preloader_spitWrap__tdVHO\",\"Spin\":\"Preloader_Spin__21CvI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TreeDataMenu\":\"TreeDataMenu_TreeDataMenu__OFGOj\",\"Menu\":\"TreeDataMenu_Menu__3iq3o\",\"wrapSubMenu\":\"TreeDataMenu_wrapSubMenu__30oBX\",\"SubMenu\":\"TreeDataMenu_SubMenu__1Vbkt\",\"arrowOpen\":\"TreeDataMenu_arrowOpen__2WnA8\",\"arrowClose\":\"TreeDataMenu_arrowClose__3KeV1\",\"MenuItem\":\"TreeDataMenu_MenuItem__3nCeD\",\"MainSubMenu\":\"TreeDataMenu_MainSubMenu__3AFie\",\"hideMenuItem\":\"TreeDataMenu_hideMenuItem__2yZlD\",\"activeListItem\":\"TreeDataMenu_activeListItem__1WYKz\"};"],"sourceRoot":""}